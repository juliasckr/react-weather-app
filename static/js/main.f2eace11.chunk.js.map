{"version":3,"sources":["Weather.js","App.js","index.js"],"names":["WeatherData","nextProps","nextState","temp","this","props","city","className","src","icon","alt","feelsLike","humidity","minTemp","maxTemp","Component","App","state","cityName","getUserCity","e","setState","target","value","weatherData","formSubmit","preventDefault","console","log","trim","fetchWeatherData","fetch","process","then","response","json","data","catch","err","onSubmit","type","placeholder","onChange","main","temp_max","temp_min","feels_like","weather","reactDOM","render","document","getElementById"],"mappings":"8JAEqBA,E,2KACnB,SAAsBC,EAAWC,GAC/B,OACED,EAAUE,OAASC,KAAKC,MAAMF,MAC9BF,EAAUK,OAASF,KAAKC,MAAMC,O,oBAMlC,WACE,OACE,yBAAKC,UAAU,QACb,6BACE,sDAC0BH,KAAKC,MAAMC,KADrC,KAC6CF,KAAKC,MAAMF,KADxD,SAIF,yBACEK,IAAG,2CAAsCJ,KAAKC,MAAMI,KAAjD,WACHC,IAAI,iBAEN,6BACE,0CAAgBN,KAAKC,MAAMM,UAA3B,QACA,wCAAcP,KAAKC,MAAMO,UACzB,mDAAyBR,KAAKC,MAAMQ,QAApC,QACA,mDAAyBT,KAAKC,MAAMS,QAApC,c,GA1B+BC,aCEpBC,G,iNACnBC,MAAQ,CACNC,SAAU,I,EAGZC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZH,SAAUE,EAAEE,OAAOC,MACnBC,YAAa,Q,EAIjBC,WAAa,SAACL,GAEZA,EAAEM,iBACFC,QAAQC,IAAI,kBACZD,QAAQC,IAAI,EAAKX,MAAMC,UACY,KAA/B,EAAKD,MAAMC,SAASW,QACtB,EAAKC,iBAAiB,EAAKb,MAAMC,W,EAIrCY,iBAAmB,SAACxB,GAClByB,MAAM,qDAAD,OACkDzB,EADlD,kBACgE0B,mCADhE,kBAGFC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKf,SAAS,CAAEG,YAAaY,OAC5CC,OAAM,SAACC,GAAD,OAASX,QAAQC,IAAIU,O,uDAGhC,WACElC,KAAK0B,iBAAiB,Y,oBAGxB,WACE,IAAIM,EAAOhC,KAAKa,MAAMO,YACtB,OACE,yBAAKjB,UAAU,aACb,2CACA,0BAAMgC,SAAUnC,KAAKqB,YACnB,2BACEe,KAAK,OACLC,YAAY,uBACZC,SAAUtC,KAAKe,cAEjB,oDAGDiB,GACC,kBAAC,EAAD,CACE9B,KAAMF,KAAKa,MAAMC,SACjBf,KAAMiC,EAAKO,KAAKxC,KAChBW,QAASsB,EAAKO,KAAKC,SACnB/B,QAASuB,EAAKO,KAAKE,SACnBjC,SAAUwB,EAAKO,KAAK/B,SACpBD,UAAWyB,EAAKO,KAAKG,WACrBrC,KAAM2B,EAAKW,QAAQ,GAAGtC,Y,GAzDDM,c,cCCjCiC,EAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAAe,U","file":"static/js/main.f2eace11.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class WeatherData extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      nextProps.temp === this.props.temp &&\n      nextProps.city === this.props.city\n    ) {\n      return false;\n    }\n    return true;\n  }\n  render() {\n    return (\n      <div className=\"card\">\n        <div>\n          <h2>\n            Current temperature in {this.props.city}: {this.props.temp}째\n          </h2>\n        </div>\n        <img\n          src={`http://openweathermap.org/img/wn/${this.props.icon}@4x.png`}\n          alt=\"weather icon\"\n        />\n        <div>\n          <p>Feels like: {this.props.feelsLike}째</p>\n          <p>Humidity: {this.props.humidity}</p>\n          <p>Minimum temperature: {this.props.minTemp}째</p>\n          <p>Maximum temperature: {this.props.maxTemp}째</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport WeatherData from \"./Weather\";\nimport \"./style.css\";\n\nexport default class App extends Component {\n  state = {\n    cityName: \"\",\n  };\n\n  getUserCity = (e) => {\n    this.setState({\n      cityName: e.target.value,\n      weatherData: null,\n    });\n  };\n\n  formSubmit = (e) => {\n    // prevent default behaviour of form - because otherwise it would refresh your whole page after pressing the submit button, and then we couldn't do anything with the submitted input\n    e.preventDefault();\n    console.log(\"form submitted\");\n    console.log(this.state.cityName);\n    if (this.state.cityName.trim() !== \"\") {\n      this.fetchWeatherData(this.state.cityName);\n    }\n  };\n\n  fetchWeatherData = (city) => {\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}&units=metric`\n    )\n      .then((response) => response.json())\n      .then((data) => this.setState({ weatherData: data }))\n      .catch((err) => console.log(err));\n  };\n\n  componentDidMount() {\n    this.fetchWeatherData(\"berlin\");\n  }\n\n  render() {\n    let data = this.state.weatherData;\n    return (\n      <div className=\"container\">\n        <h1>Weather App</h1>\n        <form onSubmit={this.formSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your city name\"\n            onChange={this.getUserCity}\n          ></input>\n          <button>Display weather</button>\n        </form>\n        {/* if data is true */}\n        {data && (\n          <WeatherData\n            city={this.state.cityName}\n            temp={data.main.temp}\n            maxTemp={data.main.temp_max}\n            minTemp={data.main.temp_min}\n            humidity={data.main.humidity}\n            feelsLike={data.main.feels_like}\n            icon={data.weather[0].icon}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","\nimport React from \"react\"\nimport App from \"./App.js\"\nimport reactDOM from \"react-dom\"\n\nreactDOM.render(<App/>,document.getElementById(\"root\"))"],"sourceRoot":""}